{
  "name": "grunt-includes",
  "description": "Include other files within a file.",
  "version": "0.4.4",
  "author": {
    "name": "vanetix",
    "email": "matmcfarland@gmail.com"
  },
  "main": "Gruntfile.js",
  "homepage": "https://github.com/vanetix/grunt-includes",
  "bugs": {
    "url": "https://github.com/vanetix/grunt-includes/issues"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/vanetix/grunt-includes.git"
  },
  "scripts": {
    "test": "grunt test"
  },
  "devDependencies": {
    "grunt": "~0.4.1",
    "grunt-contrib-clean": "~0.4.1",
    "grunt-contrib-jshint": "~0.6.0",
    "grunt-contrib-nodeunit": "~0.2.0"
  },
  "peerDependencies": {
    "grunt": "~0.4.1"
  },
  "keywords": [
    "include",
    "gruntplugin"
  ],
  "engines": {
    "node": ">= 0.8.0"
  },
  "files": [
    "tasks/includes.js"
  ],
  "readme": "# grunt-includes [![Build Status](https://travis-ci.org/vanetix/grunt-includes.png?branch=master)](https://travis-ci.org/vanetix/grunt-includes)\n***Requires grunt ~0.4.0***\n\nA grunt task for including a file within another file (think php includes). *Circular* imports will break the recursive strategy. *All includes retain parent and child indentation*\n\n## Getting Started\nInstall this grunt plugin next to your project's *Gruntfile.js* with: `npm install grunt-includes --save-dev`\n\nThen add this line to your project's `Gruntfile.js`:\n\n```javascript\ngrunt.loadNpmTasks('grunt-includes');\n```\n\nAn example site can be found at [grunt-includes-example](https://github.com/vanetix/grunt-includes-example).\n\n## Options\n\n#### flatten\nType: `String`\nDefault: `false`\n\nFlatten all file sources to the destination directory. For example `source/file/path.html` will be shortened to `path.html`.\n\n#### banner\nType: `String`\nDefault: `''`\n\nString processed by `grunt.template.process`, and prepended to every compiled file.\n\n#### duplicates\nType: `Boolean`\nDefault: `true`\n\nPermits the same file to be included twice.\n\n#### debug\nType: `Boolean`\nDefault: `false`\n\nEnables debug mode compilation.\n\n#### silent\nType: `Boolean`\nDefault: `false`\n\nSilences file save success messages.\n\n#### includePath\nType: `String`\nDefault: ``\n\nIndicates the path to use when looking for included files. Instead of using relative path in the include statements, use includePath as base directory.\n\n#### filenamePrefix\nType: `String`\nDefault: ``\n\nPrepend the defined string to each included filename before reading them. Thus making possible to include \"include_file.ext\" by using directly \"file.ext\".\n\n#### filenameSuffix\nType: `String`\nDefault: ``\n\nAppend the defined string to each included filename before reading them. Thus making possible to include \"file.ext\" by using directly \"file\".\n\n#### templateFileRegexp\nType: `RegExp`\nDefault: `/\\{\\{\\s?file\\s?\\}\\}/`\n\nRegular expression for matching and replacing template text. Example: `Start of template | {{file}} | End of template`.\n\n#### template\nType: `String`\n\nTemplate to be rendered into, `{{fileName}}` and `{{file}}` will be replaced with the filename and file contents respectively.\n\n#### includeRegexp\nType: `RegExp`\nDefault: `/^(\\s*)include\\s+\"(\\S+)\"\\s*$/`\nMatches: `include \"some/file.html\"`\n\nSets the regular expression used to find *include* statements.\n\nA regex group is used to identify the important parts of the include statement.  When constructing your own regex, it can contain up to two groups (denoted by parentheses `()` in the regular expression):\n\n 1. The indentation whitespace to be appended to the front of the included file's contents\n 2. The file location\n\n**All regular expressions used must contain at least one group.**  If only one group is used, it will be assumed to contain the file path.\n\n## Usage\n\nYou can use this plugin to build html templates.\n\n```javascript\nincludes: {\n  files: {\n    src: ['path/to/foo.html', 'path/to/bar.html'], // Source files\n    dest: 'tmp', // Destination directory\n    flatten: true,\n    cwd: '.',\n    options: {\n      silent: true,\n      banner: '<!-- I am a banner <% includes.files.dest %> -->'\n    }\n  }\n}\n```\n\nOr even organize your static files.\n\n```javascript\nincludes: {\n  js: {\n    options: {\n      includeRegexp: /^\\/\\/\\s*import\\s+['\"]?([^'\"]+)['\"]?\\s*$/,\n      duplicates: false,\n      debug: true\n    },\n    files: [{\n      cwd: 'assets/js/',\n      src: '**/*.js',\n      dest: 'assets/dist/js/',\n    }],\n  },\n},\nwatch: {\n  js: {\n    files: ['assets/js/**/*.js'],\n    tasks: ['includes:js', 'jshint']\n  },\n},\n```\n\n## Troubleshooting\n\n * **Grunt is copying the wrong files to the wrong locations.** If you're using `includes` as a [multitask](http://gruntjs.com/creating-tasks#multi-tasks) and are specifying a `files` object with `src`, `dest`, and `cwd`, you must supply it in an array using the [files array format](http://gruntjs.com/configuring-tasks#files-array-format). If you shorthand it by setting `files: {src: ... }`, Grunt will misinterpret it into the [files object format](http://gruntjs.com/configuring-tasks#files-object-format) and mysteriously copy artifacts into (potentially new) `src`, `dest`, and `cwd` directories. This appears to affect only multitask usage.\n\n## Example\n*index.html*\n```html\n<html>\n<head>\n  <title>Show me</title>\n</head>\n<body>\n  include \"content.html\"\n</body>\n</html>\n```\n*content.html*\n```html\n<div class=\"content\">\n  <h1>Content</h1>\n  <p>More content</p>\n</div>\n```\n**Produces**\n```html\n<html>\n<head>\n  <title>Show me</title>\n</head>\n<body>\n  <div class=\"content\">\n    <h1>Content</h1>\n    <p>More content</p>\n  </div>\n</body>\n</html>\n```\n\n## Release History\n- 0.4.0 - Release templating ability. Thanks [nathankot](https://github.com/nathankot)!\n- 0.3.7 - Various bug fixes and updates.\n- 0.3.6 - Update replacement so only the include statement is replace. Thanks [SAPikachu](https://github.com/SAPikachu)!\n- 0.3.5 - Add options for filename prefix and suffix.\n- 0.3.4 - Add explicit include path option.\n- 0.3.2 - Add silent flag to silence save messages.\n- 0.3.0 - Add indention preservation and banner support\n- 0.2.3 - Fix bug when building source files from a different platform. Thanks [wGEric](https://github.com/wGEric)!\n- 0.2.0 - Support for expandable paths and debugging. Thanks [@ktmud](https://github.com/ktmud)!\n- 0.1.0 - Updated for grunt 0.4\n- 0.0.1 - Initial release\n\n## License (MIT)\nCopyright (c) 2012-2013 Matt McFarland\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n",
  "readmeFilename": "Readme.md",
  "_id": "grunt-includes@0.4.4",
  "_shasum": "14aff4f19eb186a66bd8f2776f1612cd7cc2b314",
  "_from": "grunt-includes@",
  "_resolved": "https://registry.npmjs.org/grunt-includes/-/grunt-includes-0.4.4.tgz"
}
